{"ast":null,"code":"import { objectToCamel } from './lib/object-to-camel.js';\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createId = configure(api => {\n  async function id() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel(data)\n    };\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new Multiaddr(ma));\n    }\n\n    return output;\n  }\n\n  return id;\n});","map":{"version":3,"names":["objectToCamel","Multiaddr","configure","toUrlSearchParams","createId","api","id","options","res","post","signal","searchParams","arg","peerId","toString","undefined","headers","data","json","output","addresses","map","ma"],"sources":["C:/Users/Ritika Mahajan/.vscode/Blockchain_Project/NFT-Marketplace/node_modules/ipfs-http-client/esm/src/id.js"],"sourcesContent":["import { objectToCamel } from './lib/object-to-camel.js';\r\nimport { Multiaddr } from 'multiaddr';\r\nimport { configure } from './lib/configure.js';\r\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\r\nexport const createId = configure(api => {\r\n  async function id(options = {}) {\r\n    const res = await api.post('id', {\r\n      signal: options.signal,\r\n      searchParams: toUrlSearchParams({\r\n        arg: options.peerId ? options.peerId.toString() : undefined,\r\n        ...options\r\n      }),\r\n      headers: options.headers\r\n    });\r\n    const data = await res.json();\r\n    const output = { ...objectToCamel(data) };\r\n    if (output.addresses) {\r\n      output.addresses = output.addresses.map(ma => new Multiaddr(ma));\r\n    }\r\n    return output;\r\n  }\r\n  return id;\r\n});"],"mappings":"AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAACG,GAAG,IAAI;EACvC,eAAeC,EAAf,GAAgC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC9B,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,IAAT,EAAe;MAC/BC,MAAM,EAAEH,OAAO,CAACG,MADe;MAE/BC,YAAY,EAAER,iBAAiB,CAAC;QAC9BS,GAAG,EAAEL,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACM,MAAR,CAAeC,QAAf,EAAjB,GAA6CC,SADpB;QAE9B,GAAGR;MAF2B,CAAD,CAFA;MAM/BS,OAAO,EAAET,OAAO,CAACS;IANc,CAAf,CAAlB;IAQA,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;IACA,MAAMC,MAAM,GAAG,EAAE,GAAGnB,aAAa,CAACiB,IAAD;IAAlB,CAAf;;IACA,IAAIE,MAAM,CAACC,SAAX,EAAsB;MACpBD,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,EAAE,IAAI,IAAIrB,SAAJ,CAAcqB,EAAd,CAA3B,CAAnB;IACD;;IACD,OAAOH,MAAP;EACD;;EACD,OAAOb,EAAP;AACD,CAlBgC,CAA1B"},"metadata":{},"sourceType":"module"}