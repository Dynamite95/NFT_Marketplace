{"ast":null,"code":"import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from './lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd(options) {\n  const all = createAddAll(options);\n  return configure(() => {\n    async function add(input) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return await last(all(normaliseInput(input), options));\n    }\n\n    return add;\n  })(options);\n}","map":{"version":3,"names":["createAddAll","last","configure","normaliseInput","createAdd","options","all","add","input"],"sources":["C:/Users/Ritika Mahajan/.vscode/Blockchain_Project/NFT-Marketplace/node_modules/ipfs-http-client/esm/src/add.js"],"sourcesContent":["import { createAddAll } from './add-all.js';\r\nimport last from 'it-last';\r\nimport { configure } from './lib/configure.js';\r\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\r\nexport function createAdd(options) {\r\n  const all = createAddAll(options);\r\n  return configure(() => {\r\n    async function add(input, options = {}) {\r\n      return await last(all(normaliseInput(input), options));\r\n    }\r\n    return add;\r\n  })(options);\r\n}"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,cAAT,QAA+B,8CAA/B;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;EACjC,MAAMC,GAAG,GAAGN,YAAY,CAACK,OAAD,CAAxB;EACA,OAAOH,SAAS,CAAC,MAAM;IACrB,eAAeK,GAAf,CAAmBC,KAAnB,EAAwC;MAAA,IAAdH,OAAc,uEAAJ,EAAI;MACtC,OAAO,MAAMJ,IAAI,CAACK,GAAG,CAACH,cAAc,CAACK,KAAD,CAAf,EAAwBH,OAAxB,CAAJ,CAAjB;IACD;;IACD,OAAOE,GAAP;EACD,CALe,CAAT,CAKJF,OALI,CAAP;AAMD"},"metadata":{},"sourceType":"module"}