{"ast":null,"code":"import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport { isBytes, isBlob, isReadableStream, isFileObject } from './utils.js';\nimport { parseMtime, parseMode } from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {\n      value,\n      done\n    } = await peekable.peek();\n\n    if (done) {\n      yield {\n        content: []\n      };\n      return;\n    }\n\n    peekable.push(value);\n\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\n\nasync function toFileObject(input, normaliseContent) {\n  const {\n    path,\n    mode,\n    mtime,\n    content\n  } = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n\n  return file;\n}","map":{"version":3,"names":["errCode","browserStreamToIt","itPeekable","isBytes","isBlob","isReadableStream","isFileObject","parseMtime","parseMode","normaliseCandidateSingle","input","normaliseContent","undefined","Error","String","toFileObject","toString","Symbol","iterator","asyncIterator","peekable","value","done","peek","content","push","Number","isInteger","path","mode","mtime","file"],"sources":["C:/Users/Ritika Mahajan/.vscode/Blockchain_Project/NFT-Marketplace/node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-single.js"],"sourcesContent":["import errCode from 'err-code';\r\nimport browserStreamToIt from 'browser-readablestream-to-it';\r\nimport itPeekable from 'it-peekable';\r\nimport {\r\n  isBytes,\r\n  isBlob,\r\n  isReadableStream,\r\n  isFileObject\r\n} from './utils.js';\r\nimport {\r\n  parseMtime,\r\n  parseMode\r\n} from 'ipfs-unixfs';\r\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\r\n  if (input === null || input === undefined) {\r\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\r\n  }\r\n  if (typeof input === 'string' || input instanceof String) {\r\n    yield toFileObject(input.toString(), normaliseContent);\r\n    return;\r\n  }\r\n  if (isBytes(input) || isBlob(input)) {\r\n    yield toFileObject(input, normaliseContent);\r\n    return;\r\n  }\r\n  if (isReadableStream(input)) {\r\n    input = browserStreamToIt(input);\r\n  }\r\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\r\n    const peekable = itPeekable(input);\r\n    const {value, done} = await peekable.peek();\r\n    if (done) {\r\n      yield { content: [] };\r\n      return;\r\n    }\r\n    peekable.push(value);\r\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\r\n      yield toFileObject(peekable, normaliseContent);\r\n      return;\r\n    }\r\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\r\n  }\r\n  if (isFileObject(input)) {\r\n    yield toFileObject(input, normaliseContent);\r\n    return;\r\n  }\r\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\r\n}\r\nasync function toFileObject(input, normaliseContent) {\r\n  const {path, mode, mtime, content} = input;\r\n  const file = {\r\n    path: path || '',\r\n    mode: parseMode(mode),\r\n    mtime: parseMtime(mtime)\r\n  };\r\n  if (content) {\r\n    file.content = await normaliseContent(content);\r\n  } else if (!path) {\r\n    file.content = await normaliseContent(input);\r\n  }\r\n  return file;\r\n}"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SACEC,OADF,EAEEC,MAFF,EAGEC,gBAHF,EAIEC,YAJF,QAKO,YALP;AAMA,SACEC,UADF,EAEEC,SAFF,QAGO,aAHP;AAIA,OAAO,gBAAgBC,wBAAhB,CAAyCC,KAAzC,EAAgDC,gBAAhD,EAAkE;EACvE,IAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAAhC,EAA2C;IACzC,MAAMZ,OAAO,CAAC,IAAIa,KAAJ,CAAW,qBAAqBH,KAAO,EAAvC,CAAD,EAA4C,sBAA5C,CAAb;EACD;;EACD,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYI,MAAlD,EAA0D;IACxD,MAAMC,YAAY,CAACL,KAAK,CAACM,QAAN,EAAD,EAAmBL,gBAAnB,CAAlB;IACA;EACD;;EACD,IAAIR,OAAO,CAACO,KAAD,CAAP,IAAkBN,MAAM,CAACM,KAAD,CAA5B,EAAqC;IACnC,MAAMK,YAAY,CAACL,KAAD,EAAQC,gBAAR,CAAlB;IACA;EACD;;EACD,IAAIN,gBAAgB,CAACK,KAAD,CAApB,EAA6B;IAC3BA,KAAK,GAAGT,iBAAiB,CAACS,KAAD,CAAzB;EACD;;EACD,IAAIO,MAAM,CAACC,QAAP,IAAmBR,KAAnB,IAA4BO,MAAM,CAACE,aAAP,IAAwBT,KAAxD,EAA+D;IAC7D,MAAMU,QAAQ,GAAGlB,UAAU,CAACQ,KAAD,CAA3B;IACA,MAAM;MAACW,KAAD;MAAQC;IAAR,IAAgB,MAAMF,QAAQ,CAACG,IAAT,EAA5B;;IACA,IAAID,IAAJ,EAAU;MACR,MAAM;QAAEE,OAAO,EAAE;MAAX,CAAN;MACA;IACD;;IACDJ,QAAQ,CAACK,IAAT,CAAcJ,KAAd;;IACA,IAAIK,MAAM,CAACC,SAAP,CAAiBN,KAAjB,KAA2BlB,OAAO,CAACkB,KAAD,CAAlC,IAA6C,OAAOA,KAAP,KAAiB,QAA9D,IAA0EA,KAAK,YAAYP,MAA/F,EAAuG;MACrG,MAAMC,YAAY,CAACK,QAAD,EAAWT,gBAAX,CAAlB;MACA;IACD;;IACD,MAAMX,OAAO,CAAC,IAAIa,KAAJ,CAAU,qGAAV,CAAD,EAAmH,sBAAnH,CAAb;EACD;;EACD,IAAIP,YAAY,CAACI,KAAD,CAAhB,EAAyB;IACvB,MAAMK,YAAY,CAACL,KAAD,EAAQC,gBAAR,CAAlB;IACA;EACD;;EACD,MAAMX,OAAO,CAAC,IAAIa,KAAJ,CAAU,uCAAuC,OAAOH,KAA9C,GAAsD,wBAAhE,CAAD,EAA4F,sBAA5F,CAAb;AACD;;AACD,eAAeK,YAAf,CAA4BL,KAA5B,EAAmCC,gBAAnC,EAAqD;EACnD,MAAM;IAACiB,IAAD;IAAOC,IAAP;IAAaC,KAAb;IAAoBN;EAApB,IAA+Bd,KAArC;EACA,MAAMqB,IAAI,GAAG;IACXH,IAAI,EAAEA,IAAI,IAAI,EADH;IAEXC,IAAI,EAAErB,SAAS,CAACqB,IAAD,CAFJ;IAGXC,KAAK,EAAEvB,UAAU,CAACuB,KAAD;EAHN,CAAb;;EAKA,IAAIN,OAAJ,EAAa;IACXO,IAAI,CAACP,OAAL,GAAe,MAAMb,gBAAgB,CAACa,OAAD,CAArC;EACD,CAFD,MAEO,IAAI,CAACI,IAAL,EAAW;IAChBG,IAAI,CAACP,OAAL,GAAe,MAAMb,gBAAgB,CAACD,KAAD,CAArC;EACD;;EACD,OAAOqB,IAAP;AACD"},"metadata":{},"sourceType":"module"}