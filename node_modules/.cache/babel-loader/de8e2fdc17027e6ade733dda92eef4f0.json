{"ast":null,"code":"const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\n\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`);\n  }\n}\n\nexport { decodeErrPrefix, encodeErrPrefix, uintMinorPrefixBytes, assertEnoughData };","map":{"version":3,"names":["decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","data","pos","need","length","Error"],"sources":["C:/Users/Ritika Mahajan/.vscode/Blockchain_Project/NFT-Marketplace/node_modules/cborg/esm/lib/common.js"],"sourcesContent":["const decodeErrPrefix = 'CBOR decode error:';\r\nconst encodeErrPrefix = 'CBOR encode error:';\r\nconst uintMinorPrefixBytes = [];\r\nuintMinorPrefixBytes[23] = 1;\r\nuintMinorPrefixBytes[24] = 2;\r\nuintMinorPrefixBytes[25] = 3;\r\nuintMinorPrefixBytes[26] = 5;\r\nuintMinorPrefixBytes[27] = 9;\r\nfunction assertEnoughData(data, pos, need) {\r\n  if (data.length - pos < need) {\r\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\r\n  }\r\n}\r\nexport {\r\n  decodeErrPrefix,\r\n  encodeErrPrefix,\r\n  uintMinorPrefixBytes,\r\n  assertEnoughData\r\n};"],"mappings":"AAAA,MAAMA,eAAe,GAAG,oBAAxB;AACA,MAAMC,eAAe,GAAG,oBAAxB;AACA,MAAMC,oBAAoB,GAAG,EAA7B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;;AACA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;EACzC,IAAIF,IAAI,CAACG,MAAL,GAAcF,GAAd,GAAoBC,IAAxB,EAA8B;IAC5B,MAAM,IAAIE,KAAJ,CAAW,GAAGR,eAAiB,2BAA/B,CAAN;EACD;AACF;;AACD,SACEA,eADF,EAEEC,eAFF,EAGEC,oBAHF,EAIEC,gBAJF"},"metadata":{},"sourceType":"module"}